{"version":3,"sources":["components/MyTimeline.js","components/BottomMenu.js","components/Personal.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","paper","padding","secondaryTail","backgroundColor","palette","secondary","main","MyTimeline","classes","Box","display","Timeline","align","TimelineItem","TimelineSeparator","TimelineDot","TimelineConnector","TimelineContent","Paper","elevation","className","Typography","variant","component","color","root","maxWidth","BottomMenu","useState","value","setValue","style","width","BottomNavigation","onChange","event","newValue","showLabels","BottomNavigationAction","label","icon","HideOnScroll","props","children","window","trigger","useScrollTrigger","target","undefined","Slide","appear","direction","in","Personal","Fragment","CssBaseline","AppBar","Toolbar","Container","my","App","flexDirection","p","m","bgcolor","flexWrap","justifyContent","alignItems","class","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.dc6c1859.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Timeline from \"@material-ui/lab/Timeline\";\r\nimport TimelineItem from \"@material-ui/lab/TimelineItem\";\r\nimport TimelineSeparator from \"@material-ui/lab/TimelineSeparator\";\r\nimport TimelineConnector from \"@material-ui/lab/TimelineConnector\";\r\nimport TimelineContent from \"@material-ui/lab/TimelineContent\";\r\n// import TimelineOppositeContent from \"@material-ui/lab/TimelineOppositeContent\";\r\nimport TimelineDot from \"@material-ui/lab/TimelineDot\";\r\nimport LaptopMacIcon from \"@material-ui/icons/LaptopMac\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport SchoolIcon from \"@material-ui/icons/School\";\r\nimport ChildCareIcon from \"@material-ui/icons/ChildCare\";\r\nimport WorkIcon from \"@material-ui/icons/Work\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: \"18px 5px\",\r\n  },\r\n  secondaryTail: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n}));\r\n\r\nfunction MyTimeline() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box display=\"flex\" >\r\n      <Timeline align=\"alternate\">\r\n        <TimelineItem>\r\n          <TimelineSeparator>\r\n            <TimelineDot>\r\n              <SchoolIcon />\r\n            </TimelineDot>\r\n            <TimelineConnector />\r\n          </TimelineSeparator>\r\n          <TimelineContent>\r\n            <Paper elevation={3} className={classes.paper}>\r\n              <Typography variant=\"h6\" component=\"h1\">\r\n               2012 : Graduated\r\n              </Typography>\r\n              <Typography>\r\n                at Kasetsart University in Information Technology\r\n              </Typography>\r\n            </Paper>\r\n          </TimelineContent>\r\n        </TimelineItem>\r\n        <TimelineItem>\r\n          <TimelineSeparator>\r\n            <TimelineDot>\r\n              <ChildCareIcon />\r\n            </TimelineDot>\r\n            <TimelineConnector />\r\n          </TimelineSeparator>\r\n          <TimelineContent>\r\n            <Paper elevation={3} className={classes.paper}>\r\n              <Typography variant=\"h6\" component=\"h1\">\r\n               2012 - 2013 Prosoftexpress company\r\n              </Typography>\r\n              <Typography>Start first job as a junior programmer</Typography>\r\n            </Paper>\r\n          </TimelineContent>\r\n        </TimelineItem>\r\n        <TimelineItem>\r\n          <TimelineSeparator>\r\n            <TimelineDot color=\"primary\">\r\n              <LaptopMacIcon />\r\n            </TimelineDot>\r\n            <TimelineConnector />\r\n          </TimelineSeparator>\r\n          <TimelineContent>\r\n            <Paper elevation={3} className={classes.paper}>\r\n              <Typography variant=\"h6\" component=\"h1\">\r\n                2013 - 2015 : Phillips capital (thailand) public limited company\r\n              </Typography>\r\n              <Typography>Programmer analyst</Typography>\r\n            </Paper>\r\n          </TimelineContent>\r\n        </TimelineItem>\r\n        <TimelineItem>\r\n          <TimelineSeparator>\r\n            <TimelineDot color=\"primary\" variant=\"outlined\">\r\n              <WorkIcon />\r\n            </TimelineDot>\r\n          </TimelineSeparator>\r\n          <TimelineContent>\r\n            <Paper elevation={3} className={classes.paper}>\r\n              <Typography variant=\"h6\" component=\"h1\">\r\n               2015 - now : Bank of Krungsri ayudhya public company limited\r\n              </Typography>\r\n              <Typography>as a Software developer</Typography>\r\n            </Paper>\r\n          </TimelineContent>\r\n        </TimelineItem>\r\n      </Timeline>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default MyTimeline;\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\r\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\r\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\r\nimport CodeIcon from '@material-ui/icons/Code';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {  maxWidth : 500},\r\n});\r\n\r\nfunction BottomMenu() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = useState(0);\r\n\r\n  return (\r\n    <div style={{width:'100%'}}>\r\n      <BottomNavigation\r\n        value={value}\r\n        onChange={(event, newValue) => { setValue(newValue); }}\r\n        showLabels\r\n        className={classes.root}\r\n      >\r\n        <BottomNavigationAction label=\"About me\" icon={<PermIdentityIcon />} />\r\n        <BottomNavigationAction label=\"Exprerience\" icon={<WorkIcon />} />\r\n        <BottomNavigationAction label=\"Skills\" icon={<CodeIcon />} />\r\n      </BottomNavigation>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BottomMenu;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\n\r\nfunction HideOnScroll(props) {\r\n  const { children, window } = props;\r\n  // Note that you normally won't need to set the window ref as useScrollTrigger\r\n  // will default to window.\r\n  // This is only being set here because the demo is in an iframe.\r\n  const trigger = useScrollTrigger({ target: window ? window() : undefined });\r\n\r\n  return (\r\n    <Slide appear={false} direction=\"down\" in={!trigger}>\r\n      {children}\r\n    </Slide>\r\n  );\r\n}\r\n\r\nHideOnScroll.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n  /**\r\n   * Injected by the documentation to work in an iframe.\r\n   * You won't need it on your project.\r\n   */\r\n  window: PropTypes.func,\r\n};\r\n\r\nfunction Personal(props) {\r\n  return (\r\n    <div>\r\n      <React.Fragment>\r\n        <CssBaseline />\r\n        <HideOnScroll {...props}>\r\n          <AppBar>\r\n            <Toolbar>\r\n              <Typography variant=\"h6\">Sarun Seepomkun</Typography>\r\n            </Toolbar>\r\n          </AppBar>\r\n        </HideOnScroll>\r\n        <Toolbar />\r\n        <Container>\r\n          <Box my={2}>\r\n          </Box>\r\n        </Container>\r\n      </React.Fragment>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Personal;\r\n","import React from 'react';\nimport './App.css';\nimport MyTimeline from './components/MyTimeline';\nimport BottomMenu from './components/BottomMenu';\nimport Personal from './components/Personal';\nimport Box from '@material-ui/core/Box';\n\nfunction App() {\n  return (\n    <Box display=\"flex\" flexDirection=\"column\" p={1} m={1} bgcolor=\"background.paper\" flexWrap=\"wrap\" justifyContent=\"center\" alignItems=\"flex-start\">\n      <Personal />\n      <MyTimeline />\n      <BottomMenu class=\"footer\" />\n    </Box>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}